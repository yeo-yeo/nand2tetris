// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    // screen address starts at 0100000000000000
    // keyboard address is 0110000000000000
    // so you can use 2nd bit from left (add[14]) to determine if the address is main
    // memory or devices
    // and then if you know it's devices, the 3rd bit from the left (add[13]) to 
    // determine if it's screen or keyboard

    PARTS:
    // Glue
    DMux(in=load, sel=address[14], a=mainLoad, b=screenLoad);
    // Main data memory (16K)
    RAM16K(in=in,load=mainLoad,address=address[0..13],out=mainMemoryOut);
    // Screen memory (8K) - built in chip
    Screen(in=in,load=screenLoad, address=address[0..12], out=screenOut);
    // Keyboard memory (16 bit) - built in chip
    Keyboard(out=keyOut);
    // Glue
    Mux4Way16(a=mainMemoryOut,b=mainMemoryOut,c=screenOut,d=keyOut,sel=address[13..14],out=out);
    // NB i was thinking about how to identify keyboard in vs screen in but you dont need a keyboard in!! 
}